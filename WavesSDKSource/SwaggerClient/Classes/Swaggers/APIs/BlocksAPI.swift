//
// BlocksAPI.swift
//
// Generated by swagger-codegen
// https://github.com/swagger-api/swagger-codegen
//

import Foundation
import Alamofire



open class BlocksAPI {
    /**
     Blocks produced by address
     - parameter from: (path) Start block height      - parameter to: (path) End block height      - parameter address: (path) Address 
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func address1(from: Int, to: Int, address: String, completion: @escaping ((_ data: Function1RequestContextFutureRouteResult?,_ error: Error?) -> Void)) {
        address1WithRequestBuilder(from: from, to: to, address: address).execute { (response, error) -> Void in
            completion(response?.body, error)
        }
    }


    /**
     Blocks produced by address
     - GET /blocks/address/{address}/{from}/{to}
     - Get list of blocks generated by specified address
     - parameter from: (path) Start block height      - parameter to: (path) End block height      - parameter address: (path) Address 

     - returns: RequestBuilder<Function1RequestContextFutureRouteResult> 
     */
    open class func address1WithRequestBuilder(from: Int, to: Int, address: String) -> RequestBuilder<Function1RequestContextFutureRouteResult> {
        var path = "/blocks/address/{address}/{from}/{to}"
        let fromPreEscape = "\(from)"
        let fromPostEscape = fromPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        path = path.replacingOccurrences(of: "{from}", with: fromPostEscape, options: .literal, range: nil)
        let toPreEscape = "\(to)"
        let toPostEscape = toPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        path = path.replacingOccurrences(of: "{to}", with: toPostEscape, options: .literal, range: nil)
        let addressPreEscape = "\(address)"
        let addressPostEscape = addressPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        path = path.replacingOccurrences(of: "{address}", with: addressPostEscape, options: .literal, range: nil)
        let URLString = SwaggerClientAPI.basePath + path
        let parameters: [String:Any]? = nil

        let url = URLComponents(string: URLString)

        let requestBuilder: RequestBuilder<Function1RequestContextFutureRouteResult>.Type = SwaggerClientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", URLString: (url?.string ?? URLString), parameters: parameters, isBody: false)
    }

    /**
     Block at height
     - parameter height: (path) Block height 
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func at1(height: Int, completion: @escaping ((_ data: Function1RequestContextFutureRouteResult?,_ error: Error?) -> Void)) {
        at1WithRequestBuilder(height: height).execute { (response, error) -> Void in
            completion(response?.body, error)
        }
    }


    /**
     Block at height
     - GET /blocks/at/{height}
     - Get block at specified height
     - parameter height: (path) Block height 

     - returns: RequestBuilder<Function1RequestContextFutureRouteResult> 
     */
    open class func at1WithRequestBuilder(height: Int) -> RequestBuilder<Function1RequestContextFutureRouteResult> {
        var path = "/blocks/at/{height}"
        let heightPreEscape = "\(height)"
        let heightPostEscape = heightPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        path = path.replacingOccurrences(of: "{height}", with: heightPostEscape, options: .literal, range: nil)
        let URLString = SwaggerClientAPI.basePath + path
        let parameters: [String:Any]? = nil

        let url = URLComponents(string: URLString)

        let requestBuilder: RequestBuilder<Function1RequestContextFutureRouteResult>.Type = SwaggerClientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", URLString: (url?.string ?? URLString), parameters: parameters, isBody: false)
    }

    /**
     Block header at height
     - parameter height: (path) Block height 
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func atHeaderOnly1(height: Int, completion: @escaping ((_ data: Function1RequestContextFutureRouteResult?,_ error: Error?) -> Void)) {
        atHeaderOnly1WithRequestBuilder(height: height).execute { (response, error) -> Void in
            completion(response?.body, error)
        }
    }


    /**
     Block header at height
     - GET /blocks/headers/at/{height}
     - Get block header at specified height
     - parameter height: (path) Block height 

     - returns: RequestBuilder<Function1RequestContextFutureRouteResult> 
     */
    open class func atHeaderOnly1WithRequestBuilder(height: Int) -> RequestBuilder<Function1RequestContextFutureRouteResult> {
        var path = "/blocks/headers/at/{height}"
        let heightPreEscape = "\(height)"
        let heightPostEscape = heightPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        path = path.replacingOccurrences(of: "{height}", with: heightPostEscape, options: .literal, range: nil)
        let URLString = SwaggerClientAPI.basePath + path
        let parameters: [String:Any]? = nil

        let url = URLComponents(string: URLString)

        let requestBuilder: RequestBuilder<Function1RequestContextFutureRouteResult>.Type = SwaggerClientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", URLString: (url?.string ?? URLString), parameters: parameters, isBody: false)
    }

    /**
     Child block
     - parameter signature: (path) Base58-encoded block signature 
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func child1(signature: String, completion: @escaping ((_ data: Function1RequestContextFutureRouteResult?,_ error: Error?) -> Void)) {
        child1WithRequestBuilder(signature: signature).execute { (response, error) -> Void in
            completion(response?.body, error)
        }
    }


    /**
     Child block
     - GET /blocks/child/{signature}
     - Get successor of specified block
     - parameter signature: (path) Base58-encoded block signature 

     - returns: RequestBuilder<Function1RequestContextFutureRouteResult> 
     */
    open class func child1WithRequestBuilder(signature: String) -> RequestBuilder<Function1RequestContextFutureRouteResult> {
        var path = "/blocks/child/{signature}"
        let signaturePreEscape = "\(signature)"
        let signaturePostEscape = signaturePreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        path = path.replacingOccurrences(of: "{signature}", with: signaturePostEscape, options: .literal, range: nil)
        let URLString = SwaggerClientAPI.basePath + path
        let parameters: [String:Any]? = nil

        let url = URLComponents(string: URLString)

        let requestBuilder: RequestBuilder<Function1RequestContextFutureRouteResult>.Type = SwaggerClientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", URLString: (url?.string ?? URLString), parameters: parameters, isBody: false)
    }

    /**
     Average block delay
     - parameter signature: (path) Base58-encoded block signature      - parameter blockNum: (path) Number of blocks to count delay 
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func delay1(signature: String, blockNum: String, completion: @escaping ((_ data: Function1RequestContextFutureRouteResult?,_ error: Error?) -> Void)) {
        delay1WithRequestBuilder(signature: signature, blockNum: blockNum).execute { (response, error) -> Void in
            completion(response?.body, error)
        }
    }


    /**
     Average block delay
     - GET /blocks/delay/{signature}/{blockNum}
     - Average delay in milliseconds between last `blockNum` blocks starting from block with `signature`
     - parameter signature: (path) Base58-encoded block signature      - parameter blockNum: (path) Number of blocks to count delay 

     - returns: RequestBuilder<Function1RequestContextFutureRouteResult> 
     */
    open class func delay1WithRequestBuilder(signature: String, blockNum: String) -> RequestBuilder<Function1RequestContextFutureRouteResult> {
        var path = "/blocks/delay/{signature}/{blockNum}"
        let signaturePreEscape = "\(signature)"
        let signaturePostEscape = signaturePreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        path = path.replacingOccurrences(of: "{signature}", with: signaturePostEscape, options: .literal, range: nil)
        let blockNumPreEscape = "\(blockNum)"
        let blockNumPostEscape = blockNumPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        path = path.replacingOccurrences(of: "{blockNum}", with: blockNumPostEscape, options: .literal, range: nil)
        let URLString = SwaggerClientAPI.basePath + path
        let parameters: [String:Any]? = nil

        let url = URLComponents(string: URLString)

        let requestBuilder: RequestBuilder<Function1RequestContextFutureRouteResult>.Type = SwaggerClientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", URLString: (url?.string ?? URLString), parameters: parameters, isBody: false)
    }

    /**
     Genesis block

     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func first1(completion: @escaping ((_ data: Function1RequestContextFutureRouteResult?,_ error: Error?) -> Void)) {
        first1WithRequestBuilder().execute { (response, error) -> Void in
            completion(response?.body, error)
        }
    }


    /**
     Genesis block
     - GET /blocks/first
     - Get genesis block

     - returns: RequestBuilder<Function1RequestContextFutureRouteResult> 
     */
    open class func first1WithRequestBuilder() -> RequestBuilder<Function1RequestContextFutureRouteResult> {
        let path = "/blocks/first"
        let URLString = SwaggerClientAPI.basePath + path
        let parameters: [String:Any]? = nil

        let url = URLComponents(string: URLString)

        let requestBuilder: RequestBuilder<Function1RequestContextFutureRouteResult>.Type = SwaggerClientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", URLString: (url?.string ?? URLString), parameters: parameters, isBody: false)
    }

    /**
     Blockchain height

     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func height1(completion: @escaping ((_ data: Function1RequestContextFutureRouteResult?,_ error: Error?) -> Void)) {
        height1WithRequestBuilder().execute { (response, error) -> Void in
            completion(response?.body, error)
        }
    }


    /**
     Blockchain height
     - GET /blocks/height
     - Get current blockchain height

     - returns: RequestBuilder<Function1RequestContextFutureRouteResult> 
     */
    open class func height1WithRequestBuilder() -> RequestBuilder<Function1RequestContextFutureRouteResult> {
        let path = "/blocks/height"
        let URLString = SwaggerClientAPI.basePath + path
        let parameters: [String:Any]? = nil

        let url = URLComponents(string: URLString)

        let requestBuilder: RequestBuilder<Function1RequestContextFutureRouteResult>.Type = SwaggerClientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", URLString: (url?.string ?? URLString), parameters: parameters, isBody: false)
    }

    /**
     Block height
     - parameter signature: (path) Base58-encoded block signature 
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func heightEncoded1(signature: String, completion: @escaping ((_ data: Function1RequestContextFutureRouteResult?,_ error: Error?) -> Void)) {
        heightEncoded1WithRequestBuilder(signature: signature).execute { (response, error) -> Void in
            completion(response?.body, error)
        }
    }


    /**
     Block height
     - GET /blocks/height/{signature}
     - Height of a block by its signature
     - parameter signature: (path) Base58-encoded block signature 

     - returns: RequestBuilder<Function1RequestContextFutureRouteResult> 
     */
    open class func heightEncoded1WithRequestBuilder(signature: String) -> RequestBuilder<Function1RequestContextFutureRouteResult> {
        var path = "/blocks/height/{signature}"
        let signaturePreEscape = "\(signature)"
        let signaturePostEscape = signaturePreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        path = path.replacingOccurrences(of: "{signature}", with: signaturePostEscape, options: .literal, range: nil)
        let URLString = SwaggerClientAPI.basePath + path
        let parameters: [String:Any]? = nil

        let url = URLComponents(string: URLString)

        let requestBuilder: RequestBuilder<Function1RequestContextFutureRouteResult>.Type = SwaggerClientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", URLString: (url?.string ?? URLString), parameters: parameters, isBody: false)
    }

    /**
     Last block

     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func last1(completion: @escaping ((_ data: Function1RequestContextFutureRouteResult?,_ error: Error?) -> Void)) {
        last1WithRequestBuilder().execute { (response, error) -> Void in
            completion(response?.body, error)
        }
    }


    /**
     Last block
     - GET /blocks/last
     - Get last block

     - returns: RequestBuilder<Function1RequestContextFutureRouteResult> 
     */
    open class func last1WithRequestBuilder() -> RequestBuilder<Function1RequestContextFutureRouteResult> {
        let path = "/blocks/last"
        let URLString = SwaggerClientAPI.basePath + path
        let parameters: [String:Any]? = nil

        let url = URLComponents(string: URLString)

        let requestBuilder: RequestBuilder<Function1RequestContextFutureRouteResult>.Type = SwaggerClientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", URLString: (url?.string ?? URLString), parameters: parameters, isBody: false)
    }

    /**
     Last block header

     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func lastHeaderOnly1(completion: @escaping ((_ data: Function1RequestContextFutureRouteResult?,_ error: Error?) -> Void)) {
        lastHeaderOnly1WithRequestBuilder().execute { (response, error) -> Void in
            completion(response?.body, error)
        }
    }


    /**
     Last block header
     - GET /blocks/headers/last
     - Get last block header

     - returns: RequestBuilder<Function1RequestContextFutureRouteResult> 
     */
    open class func lastHeaderOnly1WithRequestBuilder() -> RequestBuilder<Function1RequestContextFutureRouteResult> {
        let path = "/blocks/headers/last"
        let URLString = SwaggerClientAPI.basePath + path
        let parameters: [String:Any]? = nil

        let url = URLComponents(string: URLString)

        let requestBuilder: RequestBuilder<Function1RequestContextFutureRouteResult>.Type = SwaggerClientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", URLString: (url?.string ?? URLString), parameters: parameters, isBody: false)
    }

    /**
     Block range
     - parameter from: (path) Start block height      - parameter to: (path) End block height 
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func seq2(from: Int, to: Int, completion: @escaping ((_ data: Function1RequestContextFutureRouteResult?,_ error: Error?) -> Void)) {
        seq2WithRequestBuilder(from: from, to: to).execute { (response, error) -> Void in
            completion(response?.body, error)
        }
    }


    /**
     Block range
     - GET /blocks/seq/{from}/{to}
     - Get blocks at specified heights
     - parameter from: (path) Start block height      - parameter to: (path) End block height 

     - returns: RequestBuilder<Function1RequestContextFutureRouteResult> 
     */
    open class func seq2WithRequestBuilder(from: Int, to: Int) -> RequestBuilder<Function1RequestContextFutureRouteResult> {
        var path = "/blocks/seq/{from}/{to}"
        let fromPreEscape = "\(from)"
        let fromPostEscape = fromPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        path = path.replacingOccurrences(of: "{from}", with: fromPostEscape, options: .literal, range: nil)
        let toPreEscape = "\(to)"
        let toPostEscape = toPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        path = path.replacingOccurrences(of: "{to}", with: toPostEscape, options: .literal, range: nil)
        let URLString = SwaggerClientAPI.basePath + path
        let parameters: [String:Any]? = nil

        let url = URLComponents(string: URLString)

        let requestBuilder: RequestBuilder<Function1RequestContextFutureRouteResult>.Type = SwaggerClientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", URLString: (url?.string ?? URLString), parameters: parameters, isBody: false)
    }

    /**
     Block header range
     - parameter from: (path) Start block height      - parameter to: (path) End block height 
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func seqHeaderOnly1(from: Int, to: Int, completion: @escaping ((_ data: Function1RequestContextFutureRouteResult?,_ error: Error?) -> Void)) {
        seqHeaderOnly1WithRequestBuilder(from: from, to: to).execute { (response, error) -> Void in
            completion(response?.body, error)
        }
    }


    /**
     Block header range
     - GET /blocks/headers/seq/{from}/{to}
     - Get block headers at specified heights
     - parameter from: (path) Start block height      - parameter to: (path) End block height 

     - returns: RequestBuilder<Function1RequestContextFutureRouteResult> 
     */
    open class func seqHeaderOnly1WithRequestBuilder(from: Int, to: Int) -> RequestBuilder<Function1RequestContextFutureRouteResult> {
        var path = "/blocks/headers/seq/{from}/{to}"
        let fromPreEscape = "\(from)"
        let fromPostEscape = fromPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        path = path.replacingOccurrences(of: "{from}", with: fromPostEscape, options: .literal, range: nil)
        let toPreEscape = "\(to)"
        let toPostEscape = toPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        path = path.replacingOccurrences(of: "{to}", with: toPostEscape, options: .literal, range: nil)
        let URLString = SwaggerClientAPI.basePath + path
        let parameters: [String:Any]? = nil

        let url = URLComponents(string: URLString)

        let requestBuilder: RequestBuilder<Function1RequestContextFutureRouteResult>.Type = SwaggerClientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", URLString: (url?.string ?? URLString), parameters: parameters, isBody: false)
    }

    /**
     Block by signature
     - parameter signature: (path) Base58-encoded block signature 
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func signature1(signature: String, completion: @escaping ((_ data: Function1RequestContextFutureRouteResult?,_ error: Error?) -> Void)) {
        signature1WithRequestBuilder(signature: signature).execute { (response, error) -> Void in
            completion(response?.body, error)
        }
    }


    /**
     Block by signature
     - GET /blocks/signature/{signature}
     - Get block by its signature
     - parameter signature: (path) Base58-encoded block signature 

     - returns: RequestBuilder<Function1RequestContextFutureRouteResult> 
     */
    open class func signature1WithRequestBuilder(signature: String) -> RequestBuilder<Function1RequestContextFutureRouteResult> {
        var path = "/blocks/signature/{signature}"
        let signaturePreEscape = "\(signature)"
        let signaturePostEscape = signaturePreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        path = path.replacingOccurrences(of: "{signature}", with: signaturePostEscape, options: .literal, range: nil)
        let URLString = SwaggerClientAPI.basePath + path
        let parameters: [String:Any]? = nil

        let url = URLComponents(string: URLString)

        let requestBuilder: RequestBuilder<Function1RequestContextFutureRouteResult>.Type = SwaggerClientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", URLString: (url?.string ?? URLString), parameters: parameters, isBody: false)
    }

}

//
// AliasAPI.swift
//
// Generated by swagger-codegen
// https://github.com/swagger-api/swagger-codegen
//

import Foundation
import Alamofire



open class AliasAPI {
    /**
     Address by alias
     - parameter alias: (path) Alias 
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func addressOfAlias1(alias: String, completion: @escaping ((_ data: Function1RequestContextFutureRouteResult?,_ error: Error?) -> Void)) {
        addressOfAlias1WithRequestBuilder(alias: alias).execute { (response, error) -> Void in
            completion(response?.body, error)
        }
    }


    /**
     Address by alias
     - GET /alias/by-alias/{alias}
     - Returns an address associated with an Alias. Alias should be plain text without an 'alias' prefix and network code.
     - parameter alias: (path) Alias 

     - returns: RequestBuilder<Function1RequestContextFutureRouteResult> 
     */
    open class func addressOfAlias1WithRequestBuilder(alias: String) -> RequestBuilder<Function1RequestContextFutureRouteResult> {
        var path = "/alias/by-alias/{alias}"
        let aliasPreEscape = "\(alias)"
        let aliasPostEscape = aliasPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        path = path.replacingOccurrences(of: "{alias}", with: aliasPostEscape, options: .literal, range: nil)
        let URLString = SwaggerClientAPI.basePath + path
        let parameters: [String:Any]? = nil

        let url = URLComponents(string: URLString)

        let requestBuilder: RequestBuilder<Function1RequestContextFutureRouteResult>.Type = SwaggerClientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", URLString: (url?.string ?? URLString), parameters: parameters, isBody: false)
    }

    /**
     Aliases by address
     - parameter address: (path) Address 
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func aliasOfAddress1(address: String, completion: @escaping ((_ data: Function1RequestContextFutureRouteResult?,_ error: Error?) -> Void)) {
        aliasOfAddress1WithRequestBuilder(address: address).execute { (response, error) -> Void in
            completion(response?.body, error)
        }
    }


    /**
     Aliases by address
     - GET /alias/by-address/{address}
     - Returns a collection of aliases associated with an address
     - parameter address: (path) Address 

     - returns: RequestBuilder<Function1RequestContextFutureRouteResult> 
     */
    open class func aliasOfAddress1WithRequestBuilder(address: String) -> RequestBuilder<Function1RequestContextFutureRouteResult> {
        var path = "/alias/by-address/{address}"
        let addressPreEscape = "\(address)"
        let addressPostEscape = addressPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        path = path.replacingOccurrences(of: "{address}", with: addressPostEscape, options: .literal, range: nil)
        let URLString = SwaggerClientAPI.basePath + path
        let parameters: [String:Any]? = nil

        let url = URLComponents(string: URLString)

        let requestBuilder: RequestBuilder<Function1RequestContextFutureRouteResult>.Type = SwaggerClientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", URLString: (url?.string ?? URLString), parameters: parameters, isBody: false)
    }

}
